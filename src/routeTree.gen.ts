/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'

// Create Virtual Routes

const WarehousesLazyImport = createFileRoute('/warehouses')()
const SettingsLazyImport = createFileRoute('/settings')()
const ProductsLazyImport = createFileRoute('/products')()
const PosLazyImport = createFileRoute('/pos')()
const GuidesLazyImport = createFileRoute('/guides')()
const DashboardLazyImport = createFileRoute('/dashboard')()
const CustomersLazyImport = createFileRoute('/customers')()
const CashJournalsLazyImport = createFileRoute('/cash-journals')()
const IndexLazyImport = createFileRoute('/')()

// Create/Update Routes

const WarehousesLazyRoute = WarehousesLazyImport.update({
  path: '/warehouses',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/warehouses.lazy').then((d) => d.Route))

const SettingsLazyRoute = SettingsLazyImport.update({
  path: '/settings',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/settings.lazy').then((d) => d.Route))

const ProductsLazyRoute = ProductsLazyImport.update({
  path: '/products',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/products.lazy').then((d) => d.Route))

const PosLazyRoute = PosLazyImport.update({
  path: '/pos',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/pos.lazy').then((d) => d.Route))

const GuidesLazyRoute = GuidesLazyImport.update({
  path: '/guides',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/guides.lazy').then((d) => d.Route))

const DashboardLazyRoute = DashboardLazyImport.update({
  path: '/dashboard',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/dashboard.lazy').then((d) => d.Route))

const CustomersLazyRoute = CustomersLazyImport.update({
  path: '/customers',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/customers.lazy').then((d) => d.Route))

const CashJournalsLazyRoute = CashJournalsLazyImport.update({
  path: '/cash-journals',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/cash-journals.lazy').then((d) => d.Route))

const IndexLazyRoute = IndexLazyImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/index.lazy').then((d) => d.Route))

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/cash-journals': {
      id: '/cash-journals'
      path: '/cash-journals'
      fullPath: '/cash-journals'
      preLoaderRoute: typeof CashJournalsLazyImport
      parentRoute: typeof rootRoute
    }
    '/customers': {
      id: '/customers'
      path: '/customers'
      fullPath: '/customers'
      preLoaderRoute: typeof CustomersLazyImport
      parentRoute: typeof rootRoute
    }
    '/dashboard': {
      id: '/dashboard'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof DashboardLazyImport
      parentRoute: typeof rootRoute
    }
    '/guides': {
      id: '/guides'
      path: '/guides'
      fullPath: '/guides'
      preLoaderRoute: typeof GuidesLazyImport
      parentRoute: typeof rootRoute
    }
    '/pos': {
      id: '/pos'
      path: '/pos'
      fullPath: '/pos'
      preLoaderRoute: typeof PosLazyImport
      parentRoute: typeof rootRoute
    }
    '/products': {
      id: '/products'
      path: '/products'
      fullPath: '/products'
      preLoaderRoute: typeof ProductsLazyImport
      parentRoute: typeof rootRoute
    }
    '/settings': {
      id: '/settings'
      path: '/settings'
      fullPath: '/settings'
      preLoaderRoute: typeof SettingsLazyImport
      parentRoute: typeof rootRoute
    }
    '/warehouses': {
      id: '/warehouses'
      path: '/warehouses'
      fullPath: '/warehouses'
      preLoaderRoute: typeof WarehousesLazyImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexLazyRoute
  '/cash-journals': typeof CashJournalsLazyRoute
  '/customers': typeof CustomersLazyRoute
  '/dashboard': typeof DashboardLazyRoute
  '/guides': typeof GuidesLazyRoute
  '/pos': typeof PosLazyRoute
  '/products': typeof ProductsLazyRoute
  '/settings': typeof SettingsLazyRoute
  '/warehouses': typeof WarehousesLazyRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexLazyRoute
  '/cash-journals': typeof CashJournalsLazyRoute
  '/customers': typeof CustomersLazyRoute
  '/dashboard': typeof DashboardLazyRoute
  '/guides': typeof GuidesLazyRoute
  '/pos': typeof PosLazyRoute
  '/products': typeof ProductsLazyRoute
  '/settings': typeof SettingsLazyRoute
  '/warehouses': typeof WarehousesLazyRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexLazyRoute
  '/cash-journals': typeof CashJournalsLazyRoute
  '/customers': typeof CustomersLazyRoute
  '/dashboard': typeof DashboardLazyRoute
  '/guides': typeof GuidesLazyRoute
  '/pos': typeof PosLazyRoute
  '/products': typeof ProductsLazyRoute
  '/settings': typeof SettingsLazyRoute
  '/warehouses': typeof WarehousesLazyRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/cash-journals'
    | '/customers'
    | '/dashboard'
    | '/guides'
    | '/pos'
    | '/products'
    | '/settings'
    | '/warehouses'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/cash-journals'
    | '/customers'
    | '/dashboard'
    | '/guides'
    | '/pos'
    | '/products'
    | '/settings'
    | '/warehouses'
  id:
    | '__root__'
    | '/'
    | '/cash-journals'
    | '/customers'
    | '/dashboard'
    | '/guides'
    | '/pos'
    | '/products'
    | '/settings'
    | '/warehouses'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexLazyRoute: typeof IndexLazyRoute
  CashJournalsLazyRoute: typeof CashJournalsLazyRoute
  CustomersLazyRoute: typeof CustomersLazyRoute
  DashboardLazyRoute: typeof DashboardLazyRoute
  GuidesLazyRoute: typeof GuidesLazyRoute
  PosLazyRoute: typeof PosLazyRoute
  ProductsLazyRoute: typeof ProductsLazyRoute
  SettingsLazyRoute: typeof SettingsLazyRoute
  WarehousesLazyRoute: typeof WarehousesLazyRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexLazyRoute: IndexLazyRoute,
  CashJournalsLazyRoute: CashJournalsLazyRoute,
  CustomersLazyRoute: CustomersLazyRoute,
  DashboardLazyRoute: DashboardLazyRoute,
  GuidesLazyRoute: GuidesLazyRoute,
  PosLazyRoute: PosLazyRoute,
  ProductsLazyRoute: ProductsLazyRoute,
  SettingsLazyRoute: SettingsLazyRoute,
  WarehousesLazyRoute: WarehousesLazyRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/cash-journals",
        "/customers",
        "/dashboard",
        "/guides",
        "/pos",
        "/products",
        "/settings",
        "/warehouses"
      ]
    },
    "/": {
      "filePath": "index.lazy.tsx"
    },
    "/cash-journals": {
      "filePath": "cash-journals.lazy.tsx"
    },
    "/customers": {
      "filePath": "customers.lazy.tsx"
    },
    "/dashboard": {
      "filePath": "dashboard.lazy.tsx"
    },
    "/guides": {
      "filePath": "guides.lazy.tsx"
    },
    "/pos": {
      "filePath": "pos.lazy.tsx"
    },
    "/products": {
      "filePath": "products.lazy.tsx"
    },
    "/settings": {
      "filePath": "settings.lazy.tsx"
    },
    "/warehouses": {
      "filePath": "warehouses.lazy.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
