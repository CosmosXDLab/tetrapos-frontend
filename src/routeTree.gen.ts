/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'

// Create Virtual Routes

const PuntoDeVentaLazyImport = createFileRoute('/punto-de-venta')()
const ProductosLazyImport = createFileRoute('/productos')()
const DiarioDeCajaLazyImport = createFileRoute('/diario-de-caja')()
const DashboardLazyImport = createFileRoute('/dashboard')()
const ConfiguracionLazyImport = createFileRoute('/configuracion')()
const ClientesLazyImport = createFileRoute('/clientes')()
const IndexLazyImport = createFileRoute('/')()

// Create/Update Routes

const PuntoDeVentaLazyRoute = PuntoDeVentaLazyImport.update({
  path: '/punto-de-venta',
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import('./routes/punto-de-venta.lazy').then((d) => d.Route),
)

const ProductosLazyRoute = ProductosLazyImport.update({
  path: '/productos',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/productos.lazy').then((d) => d.Route))

const DiarioDeCajaLazyRoute = DiarioDeCajaLazyImport.update({
  path: '/diario-de-caja',
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import('./routes/diario-de-caja.lazy').then((d) => d.Route),
)

const DashboardLazyRoute = DashboardLazyImport.update({
  path: '/dashboard',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/dashboard.lazy').then((d) => d.Route))

const ConfiguracionLazyRoute = ConfiguracionLazyImport.update({
  path: '/configuracion',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/configuracion.lazy').then((d) => d.Route))

const ClientesLazyRoute = ClientesLazyImport.update({
  path: '/clientes',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/clientes.lazy').then((d) => d.Route))

const IndexLazyRoute = IndexLazyImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/index.lazy').then((d) => d.Route))

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/clientes': {
      id: '/clientes'
      path: '/clientes'
      fullPath: '/clientes'
      preLoaderRoute: typeof ClientesLazyImport
      parentRoute: typeof rootRoute
    }
    '/configuracion': {
      id: '/configuracion'
      path: '/configuracion'
      fullPath: '/configuracion'
      preLoaderRoute: typeof ConfiguracionLazyImport
      parentRoute: typeof rootRoute
    }
    '/dashboard': {
      id: '/dashboard'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof DashboardLazyImport
      parentRoute: typeof rootRoute
    }
    '/diario-de-caja': {
      id: '/diario-de-caja'
      path: '/diario-de-caja'
      fullPath: '/diario-de-caja'
      preLoaderRoute: typeof DiarioDeCajaLazyImport
      parentRoute: typeof rootRoute
    }
    '/productos': {
      id: '/productos'
      path: '/productos'
      fullPath: '/productos'
      preLoaderRoute: typeof ProductosLazyImport
      parentRoute: typeof rootRoute
    }
    '/punto-de-venta': {
      id: '/punto-de-venta'
      path: '/punto-de-venta'
      fullPath: '/punto-de-venta'
      preLoaderRoute: typeof PuntoDeVentaLazyImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexLazyRoute
  '/clientes': typeof ClientesLazyRoute
  '/configuracion': typeof ConfiguracionLazyRoute
  '/dashboard': typeof DashboardLazyRoute
  '/diario-de-caja': typeof DiarioDeCajaLazyRoute
  '/productos': typeof ProductosLazyRoute
  '/punto-de-venta': typeof PuntoDeVentaLazyRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexLazyRoute
  '/clientes': typeof ClientesLazyRoute
  '/configuracion': typeof ConfiguracionLazyRoute
  '/dashboard': typeof DashboardLazyRoute
  '/diario-de-caja': typeof DiarioDeCajaLazyRoute
  '/productos': typeof ProductosLazyRoute
  '/punto-de-venta': typeof PuntoDeVentaLazyRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexLazyRoute
  '/clientes': typeof ClientesLazyRoute
  '/configuracion': typeof ConfiguracionLazyRoute
  '/dashboard': typeof DashboardLazyRoute
  '/diario-de-caja': typeof DiarioDeCajaLazyRoute
  '/productos': typeof ProductosLazyRoute
  '/punto-de-venta': typeof PuntoDeVentaLazyRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/clientes'
    | '/configuracion'
    | '/dashboard'
    | '/diario-de-caja'
    | '/productos'
    | '/punto-de-venta'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/clientes'
    | '/configuracion'
    | '/dashboard'
    | '/diario-de-caja'
    | '/productos'
    | '/punto-de-venta'
  id:
    | '__root__'
    | '/'
    | '/clientes'
    | '/configuracion'
    | '/dashboard'
    | '/diario-de-caja'
    | '/productos'
    | '/punto-de-venta'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexLazyRoute: typeof IndexLazyRoute
  ClientesLazyRoute: typeof ClientesLazyRoute
  ConfiguracionLazyRoute: typeof ConfiguracionLazyRoute
  DashboardLazyRoute: typeof DashboardLazyRoute
  DiarioDeCajaLazyRoute: typeof DiarioDeCajaLazyRoute
  ProductosLazyRoute: typeof ProductosLazyRoute
  PuntoDeVentaLazyRoute: typeof PuntoDeVentaLazyRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexLazyRoute: IndexLazyRoute,
  ClientesLazyRoute: ClientesLazyRoute,
  ConfiguracionLazyRoute: ConfiguracionLazyRoute,
  DashboardLazyRoute: DashboardLazyRoute,
  DiarioDeCajaLazyRoute: DiarioDeCajaLazyRoute,
  ProductosLazyRoute: ProductosLazyRoute,
  PuntoDeVentaLazyRoute: PuntoDeVentaLazyRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/clientes",
        "/configuracion",
        "/dashboard",
        "/diario-de-caja",
        "/productos",
        "/punto-de-venta"
      ]
    },
    "/": {
      "filePath": "index.lazy.tsx"
    },
    "/clientes": {
      "filePath": "clientes.lazy.tsx"
    },
    "/configuracion": {
      "filePath": "configuracion.lazy.tsx"
    },
    "/dashboard": {
      "filePath": "dashboard.lazy.tsx"
    },
    "/diario-de-caja": {
      "filePath": "diario-de-caja.lazy.tsx"
    },
    "/productos": {
      "filePath": "productos.lazy.tsx"
    },
    "/punto-de-venta": {
      "filePath": "punto-de-venta.lazy.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
